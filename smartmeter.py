import serial
import struct, binascii
import time
import sys

#https://info.kmtronic.com/raspberry-pi-modbus-energy-meter-2.html

#char cVoltage[] = {0x01,0x04,0x00,0x00,0x00,0x02,0x71,0xCB};
#char cCurrent[] = {0x01,0x04,0x00,0x06,0x00,0x02,0x91,0xCA};
#char cPower[] = {0x01,0x04,0x00,0x0C,0x00,0x02,0xB1,0xC8};
#char cAAPower[] = {0x01,0x04,0x00,0x12,0x00,0x02,0xD1,0xCE};
#char cRAPower[] = {0x01,0x04,0x00,0x18,0x00,0x02,0xF1,0xCC};
#char cPFactor[] = {0x01,0x04,0x00,0x1E,0x00,0x02,0x11,0xCD};
#char cFrequency[] = {0x01,0x04,0x00,0x46,0x00,0x02,0x90,0x1E};
#char cIAEnergy[] = {0x01,0x04,0x00,0x48,0x00,0x02,0xF1,0xDD};
#char cEAEnergy[] = {0x01,0x04,0x00,0x4A,0x00,0x02,0x50,0x1D};
#char cTAEnergy[] = {0x01,0x04,0x01,0x56,0x00,0x02,0x90,0x27};

c_power=bytearray([0x01,0x04,0x00,0x0C,0x00,0x02,0xB1,0xC8])
c_amper=bytearray([0x01,0x04,0x00,0x06,0x00,0x02,0x91,0xCA])
c_volt=bytearray([0x01,0x04,0x00,0x00,0x00,0x02,0x71,0xCB])


def read_param(hex_command):

	ret_float=0

	#test parity even!
	rs485 = serial.Serial('/dev/ttyUSB0',2400,serial.EIGHTBITS, serial.PARITY_NONE, serial.STOPBITS_ONE,timeout=5)

	rs485.write(hex_command)

	ret = rs485.read(8)#read 8 bytes
	
	if ret != '':
		# power= float of ret[3],ret[4],ret[5],ret[6]
		#print(type(ret))
		hexlify=binascii.hexlify(ret[3:7])

		ret_hex=hex(int(ret[3:7].encode('hex'), 16)) 
		#print(ret_hex)

		ret_float=struct.unpack('!f', hexlify.decode('hex'))[0]

	return ret_float


read_cycles=2
read_counter=0
cycles_values=[]

while read_counter<read_cycles:

    watt=read_param(c_power)
    cycles_values.append(watt)

    #print("amper:"+str(read_param(c_amper)))
    #print("power:"+str(read_param(c_power)))
    read_counter=read_counter+1
    time.sleep(30)#sleep 30 sec

#print("volt:"+str(read_param(c_volt)))



is_running=all(i >= 8 for i in cycles_values)
print(is_running)




